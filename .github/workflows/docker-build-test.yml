name: Test and Deploy

on:
  # Trigger on pull requests to develop branch
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened]
  
  # Trigger on pushes to develop and main branches
  push:
    branches:
      - develop
      - main

jobs:
  # Run tests on pull requests to develop
  test:
    if: github.event_name == 'pull_request' && github.base_ref == 'develop'
    runs-on: self-hosted
    environment:
      name: test-environment
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest
        
    - name: Run unit tests
      run: |
        python -m pytest test_flight_booking.py -v --tb=short
        
    - name: Test Results
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "::notice::All tests passed - PR can be merged"
        else
          echo "::error::Tests failed - PR merge blocked"
        fi

  # Deploy to main after successful push to develop
  deploy-to-main:
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    runs-on: self-hosted
    
    steps:
    - name: Checkout develop branch
      uses: actions/checkout@v4
      with:
        ref: develop
        fetch-depth: 0  # Fetch full history for merge
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Configure Git
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: Merge develop to main
      run: |
        # Switch to main branch
        git checkout main || git checkout -b main
        git pull origin main || echo "Main branch doesn't exist yet, creating..."
        
        # Merge develop into main
        git merge develop --no-ff -m "Auto-merge develop to main via GitHub Actions"
        
        # Push to main
        git push origin main
        
    - name: Create deployment summary
      run: |
        echo "::notice::Successfully deployed develop branch to main"
        echo "Commit SHA: ${{ github.sha }}"
        echo "Deployed at: $(date)"

  # Verify deployment on main branch
  verify-deployment:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: self-hosted
    
    steps:
    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        ref: main
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest
        
    - name: Run verification tests
      run: |
        echo "Running verification tests on main branch..."
        python -m pytest test_flight_booking.py -v --tb=short
        
    - name: Deployment verification complete
      run: |
        echo "::notice::Main branch verification successful"
        echo "Deployment verified at: $(date)"
        echo "Main branch is ready for production use"

  # Optional: Notify on workflow completion
  notify:
    if: always()
    needs: [test, deploy-to-main, verify-deployment]
    runs-on: self-hosted
    
    steps:
    - name: Workflow Summary
      run: |
        echo "## Workflow Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Event**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
